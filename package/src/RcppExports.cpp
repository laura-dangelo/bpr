// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// ISPolya
Rcpp::List ISPolya(const int n_rep, arma::vec y, arma::mat X, arma::vec b, arma::mat B, double r_start, arma::vec beta_start, double max_dist, int max_r, double trunc_lambda);
RcppExport SEXP _bpr_ISPolya(SEXP n_repSEXP, SEXP ySEXP, SEXP XSEXP, SEXP bSEXP, SEXP BSEXP, SEXP r_startSEXP, SEXP beta_startSEXP, SEXP max_distSEXP, SEXP max_rSEXP, SEXP trunc_lambdaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const int >::type n_rep(n_repSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type b(bSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type B(BSEXP);
    Rcpp::traits::input_parameter< double >::type r_start(r_startSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type beta_start(beta_startSEXP);
    Rcpp::traits::input_parameter< double >::type max_dist(max_distSEXP);
    Rcpp::traits::input_parameter< int >::type max_r(max_rSEXP);
    Rcpp::traits::input_parameter< double >::type trunc_lambda(trunc_lambdaSEXP);
    rcpp_result_gen = Rcpp::wrap(ISPolya(n_rep, y, X, b, B, r_start, beta_start, max_dist, max_r, trunc_lambda));
    return rcpp_result_gen;
END_RCPP
}
// ISPolya_horseshoe
Rcpp::List ISPolya_horseshoe(const int n_rep, arma::vec y, arma::mat X, arma::vec b, double r_start, arma::vec beta_start, double max_dist, int max_r, double trunc_lambda, double tau);
RcppExport SEXP _bpr_ISPolya_horseshoe(SEXP n_repSEXP, SEXP ySEXP, SEXP XSEXP, SEXP bSEXP, SEXP r_startSEXP, SEXP beta_startSEXP, SEXP max_distSEXP, SEXP max_rSEXP, SEXP trunc_lambdaSEXP, SEXP tauSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const int >::type n_rep(n_repSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type b(bSEXP);
    Rcpp::traits::input_parameter< double >::type r_start(r_startSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type beta_start(beta_startSEXP);
    Rcpp::traits::input_parameter< double >::type max_dist(max_distSEXP);
    Rcpp::traits::input_parameter< int >::type max_r(max_rSEXP);
    Rcpp::traits::input_parameter< double >::type trunc_lambda(trunc_lambdaSEXP);
    Rcpp::traits::input_parameter< double >::type tau(tauSEXP);
    rcpp_result_gen = Rcpp::wrap(ISPolya_horseshoe(n_rep, y, X, b, r_start, beta_start, max_dist, max_r, trunc_lambda, tau));
    return rcpp_result_gen;
END_RCPP
}
// MHPolya_adaptr
Rcpp::List MHPolya_adaptr(const int n_rep, arma::vec y, arma::mat X, arma::vec b, arma::mat B, double r_start, arma::vec beta_start, double max_dist, int max_r, double trunc_lambda);
RcppExport SEXP _bpr_MHPolya_adaptr(SEXP n_repSEXP, SEXP ySEXP, SEXP XSEXP, SEXP bSEXP, SEXP BSEXP, SEXP r_startSEXP, SEXP beta_startSEXP, SEXP max_distSEXP, SEXP max_rSEXP, SEXP trunc_lambdaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const int >::type n_rep(n_repSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type b(bSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type B(BSEXP);
    Rcpp::traits::input_parameter< double >::type r_start(r_startSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type beta_start(beta_startSEXP);
    Rcpp::traits::input_parameter< double >::type max_dist(max_distSEXP);
    Rcpp::traits::input_parameter< int >::type max_r(max_rSEXP);
    Rcpp::traits::input_parameter< double >::type trunc_lambda(trunc_lambdaSEXP);
    rcpp_result_gen = Rcpp::wrap(MHPolya_adaptr(n_rep, y, X, b, B, r_start, beta_start, max_dist, max_r, trunc_lambda));
    return rcpp_result_gen;
END_RCPP
}
// MHPolya_adaptr_burnin
Rcpp::List MHPolya_adaptr_burnin(const int n_rep, arma::vec y, arma::mat X, arma::vec b, arma::mat B, double r_start, arma::vec beta_start, double max_dist, int burnin, double max_dist_burnin, int max_r, double trunc_lambda);
RcppExport SEXP _bpr_MHPolya_adaptr_burnin(SEXP n_repSEXP, SEXP ySEXP, SEXP XSEXP, SEXP bSEXP, SEXP BSEXP, SEXP r_startSEXP, SEXP beta_startSEXP, SEXP max_distSEXP, SEXP burninSEXP, SEXP max_dist_burninSEXP, SEXP max_rSEXP, SEXP trunc_lambdaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const int >::type n_rep(n_repSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type b(bSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type B(BSEXP);
    Rcpp::traits::input_parameter< double >::type r_start(r_startSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type beta_start(beta_startSEXP);
    Rcpp::traits::input_parameter< double >::type max_dist(max_distSEXP);
    Rcpp::traits::input_parameter< int >::type burnin(burninSEXP);
    Rcpp::traits::input_parameter< double >::type max_dist_burnin(max_dist_burninSEXP);
    Rcpp::traits::input_parameter< int >::type max_r(max_rSEXP);
    Rcpp::traits::input_parameter< double >::type trunc_lambda(trunc_lambdaSEXP);
    rcpp_result_gen = Rcpp::wrap(MHPolya_adaptr_burnin(n_rep, y, X, b, B, r_start, beta_start, max_dist, burnin, max_dist_burnin, max_r, trunc_lambda));
    return rcpp_result_gen;
END_RCPP
}
// MHPolya_adaptr_horseshoe
Rcpp::List MHPolya_adaptr_horseshoe(const int n_rep, arma::vec y, arma::mat X, arma::vec b, double r_start, arma::vec beta_start, double max_dist, int max_r, double trunc_lambda, double tau);
RcppExport SEXP _bpr_MHPolya_adaptr_horseshoe(SEXP n_repSEXP, SEXP ySEXP, SEXP XSEXP, SEXP bSEXP, SEXP r_startSEXP, SEXP beta_startSEXP, SEXP max_distSEXP, SEXP max_rSEXP, SEXP trunc_lambdaSEXP, SEXP tauSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const int >::type n_rep(n_repSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type b(bSEXP);
    Rcpp::traits::input_parameter< double >::type r_start(r_startSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type beta_start(beta_startSEXP);
    Rcpp::traits::input_parameter< double >::type max_dist(max_distSEXP);
    Rcpp::traits::input_parameter< int >::type max_r(max_rSEXP);
    Rcpp::traits::input_parameter< double >::type trunc_lambda(trunc_lambdaSEXP);
    Rcpp::traits::input_parameter< double >::type tau(tauSEXP);
    rcpp_result_gen = Rcpp::wrap(MHPolya_adaptr_horseshoe(n_rep, y, X, b, r_start, beta_start, max_dist, max_r, trunc_lambda, tau));
    return rcpp_result_gen;
END_RCPP
}
// MHPolya_adaptr_horseshoe_burnin
Rcpp::List MHPolya_adaptr_horseshoe_burnin(const int n_rep, int burnin, arma::vec y, arma::mat X, arma::vec b, double r_start, arma::vec beta_start, double max_dist, double max_dist_burnin, int max_r, double trunc_lambda, double tau);
RcppExport SEXP _bpr_MHPolya_adaptr_horseshoe_burnin(SEXP n_repSEXP, SEXP burninSEXP, SEXP ySEXP, SEXP XSEXP, SEXP bSEXP, SEXP r_startSEXP, SEXP beta_startSEXP, SEXP max_distSEXP, SEXP max_dist_burninSEXP, SEXP max_rSEXP, SEXP trunc_lambdaSEXP, SEXP tauSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const int >::type n_rep(n_repSEXP);
    Rcpp::traits::input_parameter< int >::type burnin(burninSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type b(bSEXP);
    Rcpp::traits::input_parameter< double >::type r_start(r_startSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type beta_start(beta_startSEXP);
    Rcpp::traits::input_parameter< double >::type max_dist(max_distSEXP);
    Rcpp::traits::input_parameter< double >::type max_dist_burnin(max_dist_burninSEXP);
    Rcpp::traits::input_parameter< int >::type max_r(max_rSEXP);
    Rcpp::traits::input_parameter< double >::type trunc_lambda(trunc_lambdaSEXP);
    Rcpp::traits::input_parameter< double >::type tau(tauSEXP);
    rcpp_result_gen = Rcpp::wrap(MHPolya_adaptr_horseshoe_burnin(n_rep, burnin, y, X, b, r_start, beta_start, max_dist, max_dist_burnin, max_r, trunc_lambda, tau));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_bpr_ISPolya", (DL_FUNC) &_bpr_ISPolya, 10},
    {"_bpr_ISPolya_horseshoe", (DL_FUNC) &_bpr_ISPolya_horseshoe, 10},
    {"_bpr_MHPolya_adaptr", (DL_FUNC) &_bpr_MHPolya_adaptr, 10},
    {"_bpr_MHPolya_adaptr_burnin", (DL_FUNC) &_bpr_MHPolya_adaptr_burnin, 12},
    {"_bpr_MHPolya_adaptr_horseshoe", (DL_FUNC) &_bpr_MHPolya_adaptr_horseshoe, 10},
    {"_bpr_MHPolya_adaptr_horseshoe_burnin", (DL_FUNC) &_bpr_MHPolya_adaptr_horseshoe_burnin, 12},
    {NULL, NULL, 0}
};

RcppExport void R_init_bpr(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
